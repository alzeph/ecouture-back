# Generated by Django 5.2.4 on 2025-09-03 16:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('nickname', models.CharField(max_length=255, unique=True)),
                ('genre', models.CharField(choices=[('MAN', 'Homme'), ('WOMAN', 'Femme'), ('CHILDREN', 'Enfant')], max_length=8)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('photo', models.ImageField(blank=True, help_text='Photo du client, optionnelle', null=True, upload_to='customers_workshop/photos')),
                ('is_active', models.BooleanField(default=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('DEMO', 'Demo'), ('BASIC', 'Basic'), ('PREMIUM', 'Premium'), ('PRO', 'Pro')], max_length=255, unique=True)),
                ('description', models.TextField()),
                ('features', models.JSONField()),
                ('price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('duration', models.DurationField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Package',
                'verbose_name_plural': 'Packages',
            },
        ),
        migrations.CreateModel(
            name='OrderWorkshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, editable=False, max_length=50, unique=True)),
                ('gender', models.CharField(choices=[('MAN', 'Man'), ('WOMAN', 'Woman'), ('CHILDREN', 'Children')], max_length=8)),
                ('type_of_clothing', models.CharField(choices=[('SHIRT', 'Shirt'), ('PANTS', 'Pants'), ('DRESS', 'Dress')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('measurement', models.JSONField()),
                ('description_of_fabric', models.CharField(max_length=255)),
                ('photo_of_fabric', models.ImageField(blank=True, null=True, upload_to='orders_photos/photo_of_fabric')),
                ('clothing_model', models.CharField(max_length=255)),
                ('description_of_model', models.TextField(blank=True, null=True)),
                ('photo_of_clothing_model', models.ImageField(blank=True, null=True, upload_to='orders_photos/photo_of_clothing_model')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('down_payment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PARTIAL', 'Partial'), ('PAID', 'Paid')], max_length=10)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('DELETED', 'Deleted')], max_length=15)),
                ('is_urgent', models.BooleanField(default=False)),
                ('assign_date', models.DateField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('estimated_delivery_date', models.DateField()),
                ('promised_delivery_date', models.DateField()),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='workshop.customerworkshop')),
            ],
        ),
        migrations.CreateModel(
            name='OrderWorkshopGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(editable=False, max_length=30, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('orders', models.ManyToManyField(blank=True, help_text='Commandes incluses dans ce groupement', related_name='groups', to='workshop.orderworkshop')),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_allowed', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='worker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='orderworkshop',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='workshop.worker'),
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('description', models.TextField()),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('name', 'email'), ('name', 'phone')},
            },
        ),
        migrations.AddField(
            model_name='worker',
            name='workshop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='workshop.workshop'),
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('max_workers', models.PositiveIntegerField(default=5)),
                ('max_orders', models.PositiveIntegerField(default=50)),
                ('max_customers', models.PositiveIntegerField(default=50)),
                ('max_fittings', models.PositiveIntegerField(default=50)),
                ('max_order_groups', models.PositiveIntegerField(default=10)),
                ('max_order_ongoing_by_worker', models.PositiveBigIntegerField(default=5)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('worker_authorization_is_customer', models.ManyToManyField(blank=True, related_name='worker_authorization_is_customer', to='workshop.worker')),
                ('worker_authorization_is_fitting', models.ManyToManyField(blank=True, related_name='worker_authorization_is_fitting', to='workshop.worker')),
                ('worker_authorization_is_order', models.ManyToManyField(blank=True, related_name='worker_authorization_is_order', to='workshop.worker')),
                ('worker_authorization_is_setting', models.ManyToManyField(blank=True, related_name='worker_authorization_is_setting', to='workshop.worker')),
                ('worker_authorization_is_worker', models.ManyToManyField(blank=True, related_name='worker_authorization_is_worker', to='workshop.worker')),
                ('workshop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='workshop.workshop')),
            ],
        ),
        migrations.AddField(
            model_name='customerworkshop',
            name='workshop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='workshop.workshop'),
        ),
        migrations.CreateModel(
            name='Fitting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fitting_number', models.PositiveIntegerField(blank=True)),
                ('scheduled_date', models.DateTimeField()),
                ('actual_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('adjustments_needed', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NEEDS_MAJOR_ADJUSTMENTS', 'Needs Major Adjustments')], default='SCHEDULED', max_length=30)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fittings', to='workshop.orderworkshop')),
            ],
            options={
                'unique_together': {('order', 'fitting_number')},
            },
        ),
        migrations.CreateModel(
            name='PackageHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('info_paiement', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_histories', to='workshop.workshop')),
            ],
            options={
                'unique_together': {('workshop', 'name', 'start_date')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='customerworkshop',
            unique_together={('nickname', 'last_name', 'first_name'), ('phone', 'workshop')},
        ),
    ]
